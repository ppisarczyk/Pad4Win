<UserControl x:Class="SoftFluent.Windows.PropertyGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:windows="clr-namespace:SoftFluent.Windows"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>

        <Style TargetType="ToolTip">
            <Style.Triggers>
                <Trigger Property="Content" Value="{x:Static system:String.Empty}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="Content" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <windows:PropertyGridConverter x:Key="PropertyGridConverter" />
        <Style x:Key="ValidationLabel" TargetType="{x:Type Label}">
            <Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
        </Style>
        <Style x:Key="ValidationTextBox2" TargetType="{x:Type TextBox}">
            <Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
        </Style>
        <Style x:Key="ValidationTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderThickness="1" BorderBrush="Red" Width="1" Height="23"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <CollectionViewSource x:Key="PropertiesSource">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <Window x:Shared="false" FocusManager.FocusedElement="{Binding ElementName=EditorSelector}" Name="CollectionEditorWindow" x:Key="CollectionEditorWindow" Height="500" Width="700" Title="Collection Editor">
            <Window.CommandBindings>
                <CommandBinding Command="Close" CanExecute="OnEditorWindowCloseCanExecute" Executed="OnEditorWindowCloseExecuted" />
            </Window.CommandBindings>
            <Window.InputBindings>
                <KeyBinding Key="Escape" Command="Close" />
            </Window.InputBindings>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Name="CollectionEditorListGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ListView Name="EditorSelector" Grid.Column="0" SelectionMode="Single" ItemsSource="{Binding Value}" SelectedIndex="0" SelectionChanged="OnEditorSelectorSelectionChanged" />
                    <GridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="True" Width="5" />
                    <windows:PropertyGrid Grid.Column="2" x:Name="CollectionEditorPropertiesGrid" />
                </Grid>
                <Button Grid.Row="1" Command="Close" Margin="5,5,5,5" HorizontalAlignment="Right" Width="100" Content="Close" />
            </Grid>
        </Window>
        <Window x:Shared="false" Name="ByteArrayEditorWindow" x:Key="ByteArrayEditorWindow" Height="500" Width="700" Title="Byte Array Editor">
            <Window.CommandBindings>
                <CommandBinding Command="Close" CanExecute="OnEditorWindowCloseCanExecute" Executed="OnEditorWindowCloseExecuted" />
            </Window.CommandBindings>
            <Window.InputBindings>
                <KeyBinding Key="Escape" Command="Close" />
            </Window.InputBindings>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>
                <windows:ByteArrayControl Grid.Row="0" Source="{Binding Value}" />
                <Button Grid.Row="1" Command="Close" Margin="5,5,5,5" HorizontalAlignment="Right" Width="100" Content="Close" />
            </Grid>
        </Window>
        <Window x:Shared="false" x:Key="ObjectEditorWindow" Name="ObjectEditorWindow" Title="Object Editor" Height="400" Width="400">
            <Window.CommandBindings>
                <CommandBinding Command="Close" CanExecute="OnEditorWindowCloseCanExecute" Executed="OnEditorWindowCloseExecuted" />
            </Window.CommandBindings>
            <Window.InputBindings>
                <KeyBinding Key="Escape" Command="Close" />
            </Window.InputBindings>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="45" />
                </Grid.RowDefinitions>
                <windows:PropertyGrid Grid.Row="0" x:Name="ObjectEditorPropertiesGrid" DefaultCategoryName="General" SelectedObject="{Binding Value}" />
                <Button Name="ObjectEditorWindowClose" Grid.Row="1" IsDefault="True" IsEnabled="{Binding IsValid}" Content="Close" Command="Close" Margin="0,0,10,10" HorizontalAlignment="Right" Width="75" Height="23" VerticalAlignment="Bottom" />
            </Grid>
        </Window>
        <Window x:Shared="false" x:Key="SavableObjectEditorWindow" Name="SavableObjectEditorWindow" Title="Object Editor" Height="400" Width="400">
            <Window.CommandBindings>
                <CommandBinding Command="Save" CanExecute="OnEditorWindowSaveCanExecute" Executed="OnEditorWindowSaveExecuted" />
                <CommandBinding Command="Close" CanExecute="OnEditorWindowCloseCanExecute" Executed="OnEditorWindowCloseExecuted" />
            </Window.CommandBindings>
            <Window.InputBindings>
                <KeyBinding Key="Escape" Command="Close" />
            </Window.InputBindings>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="45" />
                </Grid.RowDefinitions>
                <windows:PropertyGrid Grid.Row="0" x:Name="SavableObjectEditorPropertiesGrid" DefaultCategoryName="General" SelectedObject="{Binding ClonedValue}" />
                <Button Name="SavableObjectEditorWindowClose" Grid.Row="1" IsDefault="True" Content="Cancel" Command="Close" Margin="0,0,10,10" HorizontalAlignment="Right" Width="75" Height="23" VerticalAlignment="Bottom" />
                <Button Name="SavableObjectEditorWindowSave" Grid.Row="1" IsEnabled="{Binding ClonedValue.IsValid}" Content="Save" Command="Save" Margin="0,0,90,10" HorizontalAlignment="Right" Width="75" Height="23" VerticalAlignment="Bottom" />
            </Grid>
        </Window>
        <Window x:Shared="false" x:Key="ReadOnlyObjectEditorWindow" Name="ReadOnlyObjectEditorWindow" Title="Object Editor" Height="400" Width="400">
            <Window.CommandBindings>
                <CommandBinding Command="Close" CanExecute="OnEditorWindowCloseCanExecute" Executed="OnEditorWindowCloseExecuted" />
            </Window.CommandBindings>
            <Window.InputBindings>
                <KeyBinding Key="Escape" Command="Close" />
            </Window.InputBindings>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="45" />
                </Grid.RowDefinitions>
                <windows:PropertyGrid Grid.Row="0" IsReadOnly="True" x:Name="ReadOnlyObjectEditorPropertiesGrid" DefaultCategoryName="General" SelectedObject="{Binding Value}" />
                <Button Name="ReadOnlyObjectEditorWindowClose" Grid.Row="1" IsDefault="True" IsEnabled="{Binding IsValid}" Content="Close" Command="Close" Margin="0,0,10,10" HorizontalAlignment="Right" Width="75" Height="23" VerticalAlignment="Bottom" />
            </Grid>
        </Window>
        <Window x:Shared="false" x:Key="BigTextEditorWindow" Name="BigTextEditorWindow" Title="Text" Height="400" Width="400">
            <Window.CommandBindings>
                <CommandBinding Command="Close" CanExecute="OnEditorWindowCloseCanExecute" Executed="OnEditorWindowCloseExecuted" />
            </Window.CommandBindings>
            <Window.InputBindings>
                <KeyBinding Key="Escape" Command="Close" />
            </Window.InputBindings>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="45" />
                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" AcceptsReturn="True" Text="{Binding Value}" IsReadOnly="{Binding IsReadOnly}" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" FontFamily="{Binding Attributes.FontFamily}" />
                <Button Name="BigTextEditorWindowClose" Grid.Row="1" IsDefault="True" Content="Close" Command="Close" Margin="0,0,10,10" HorizontalAlignment="Right" Width="75" Height="23" VerticalAlignment="Bottom" />
            </Grid>
        </Window>

        <DataTemplate x:Key="DateTimePicker">
            <windows:DateTimePicker SelectedDate="{Binding Value, UpdateSourceTrigger=PropertyChanged}" SelectedDateTime="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>
        <DataTemplate x:Key="ColorEnumEditor">
            <TextBox Text="{Binding Value}" IsReadOnly="{Binding IsReadOnly}" Foreground="{Binding EnumAttributes.Foreground}" Background="{Binding EnumAttributes.Background}"  />
        </DataTemplate>
        <DataTemplate x:Key="BigTextEditor">
            <Grid>
                <TextBox Text="{Binding TextValue, Mode=OneWay}" MaxLines="1" VerticalContentAlignment="Center" IsEnabled="False" Background="{Binding Attributes.Background}" Foreground="{Binding Attributes.Foreground}" />
                <Button HorizontalAlignment="Right" Content="..." Width="24" Command="{x:Static windows:PropertyGrid.BrowseCommand}" CommandParameter="BigTextEditorWindow" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ObjectEditor">
            <Grid>
                <TextBox Text="{Binding TextValue, Mode=OneWay}" IsReadOnly="True" />
                <Button HorizontalAlignment="Right" Content="..." Width="24" Command="{x:Static windows:PropertyGrid.BrowseCommand}" CommandParameter="ObjectEditorWindow" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SavableObjectEditor">
            <Grid>
                <TextBox Text="{Binding TextValue, Mode=TwoWay}" IsReadOnly="True" />
                <Button HorizontalAlignment="Right" Content="..." Width="24" Command="{x:Static windows:PropertyGrid.BrowseCommand}" CommandParameter="SavableObjectEditorWindow" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ReadOnlyObjectEditor">
            <Grid>
                <TextBox Text="{Binding TextValue, Mode=OneWay}" IsReadOnly="True" />
                <Button HorizontalAlignment="Right" Content="..." Width="24" Command="{x:Static windows:PropertyGrid.BrowseCommand}" CommandParameter="ReadOnlyObjectEditorWindow" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ProgressEditor">
            <Grid>
                <ProgressBar Value="{Binding Value}" Minimum="0" Maximum="100" ></ProgressBar>
                <TextBlock Text="{Binding TextValue, StringFormat={}{0}%}" HorizontalAlignment="Center" ></TextBlock>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TextEditor">
            <Grid>
                <TextBox Background="{Binding Attributes.Background}" Foreground="{Binding Attributes.Foreground}" FontSize="{Binding Attributes.FontSize}" FontFamily="{Binding Attributes.FontFamily}" Text="{Binding TextValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource ValidationTextBox2}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="FormatTextEditor">
            <Grid>
                <Label Padding="3,0,0,0" Height="20" VerticalContentAlignment="Center" ContentStringFormat="{Binding Attributes.Format}" Background="{Binding Attributes.Background}" Foreground="{Binding Attributes.Foreground}" FontSize="{Binding Attributes.FontSize}" FontFamily="{Binding Attributes.FontFamily}" Content="{Binding TextValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource ValidationLabel}" />
            </Grid>
        </DataTemplate>

    </UserControl.Resources>
    <ScrollViewer>
    <DataGrid MinRowHeight="24" PreviewKeyUp="OnUIElementPreviewKeyUp" ToggleButton.Checked="OnToggleButtonIsCheckedChanged" ToggleButton.Indeterminate="OnToggleButtonIsCheckedChanged" ToggleButton.Unchecked="OnToggleButtonIsCheckedChanged" HorizontalGridLinesBrush="#D0D0D0" VerticalGridLinesBrush="#D0D0D0" AutoGenerateColumns="False" SelectionUnit="Cell" SelectionMode="Single" CanUserReorderColumns="False" CanUserResizeRows="False" FrozenColumnCount="1" HeadersVisibility="None" Name="PropertiesGrid" ItemsSource="{Binding Source={StaticResource PropertiesSource}}">
        <DataGrid.Columns>
            <DataGridTextColumn Header="Name" Binding="{Binding DisplayName}" Width="SizeToCells" IsReadOnly="True" Foreground="Black">
                <DataGridTextColumn.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="ToolTip" Value="{Binding Description}" />
                    </Style>
                </DataGridTextColumn.CellStyle>
            </DataGridTextColumn>
            <DataGridTemplateColumn Header="Value" Width="*">
                <DataGridTemplateColumn.CellTemplateSelector>
                    <windows:PropertyGridDataTemplateSelector>
                        <windows:PropertyGridDataTemplate IsCollection="True" CollectionItemPropertyType="System.Byte">
                            <DataTemplate>
                                <Grid>
                                    <TextBox Text="{Binding CollectionCount, Mode=OneWay}" IsReadOnly="True" />
                                    <Button HorizontalAlignment="Right" Content="..." Width="24" Command="{x:Static windows:PropertyGrid.BrowseCommand}" CommandParameter="ByteArrayEditorWindow" />
                                </Grid>
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <windows:PropertyGridDataTemplate IsCollection="True">
                            <DataTemplate>
                                <Grid>
                                    <TextBox Text="{Binding CollectionCount, Mode=OneWay}" IsReadOnly="True" />
                                    <Button HorizontalAlignment="Right" Content="..." Width="24" Command="{x:Static windows:PropertyGrid.BrowseCommand}"/>
                                </Grid>
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <windows:PropertyGridDataTemplate PropertyType="System.Enum|System.Nullable`1[System.Enum]" IsFlagsEnum="True" IsReadOnly="False">
                            <DataTemplate>
                                <ComboBox Name="CB" IsEditable="True" IsReadOnly="True" Text="{Binding Value}" ItemsSource="{windows:PropertyGridComboBox {Binding}}" SelectedValue="{Binding Value}" SelectedValuePath="Value">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="20" />
                                                <TextBlock Text="{Binding Name}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <windows:PropertyGridDataTemplate PropertyType="System.Enum|System.Nullable`1[System.Enum]" IsReadOnly="False">
                            <DataTemplate>
                                <ComboBox ItemsSource="{windows:PropertyGridComboBox {Binding}}" SelectedValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Value" />
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <!--<windows:PropertyGridDataTemplate PropertyType="System.Boolean|System.Nullable`1[System.Boolean]" IsReadOnly="False">
                            <DataTemplate>
                                <ComboBox ItemsSource="{windows:PropertyGridComboBox {Binding}}" SelectedValue="{Binding Value}" SelectedValuePath="Value" />
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>-->
                        <windows:PropertyGridDataTemplate PropertyType="System.Nullable`1[System.Boolean]">
                            <DataTemplate>
                                <CheckBox IsThreeState="True" IsChecked="{Binding BooleanValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsReadWrite}" />
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <windows:PropertyGridDataTemplate PropertyType="System.Boolean" IsReadOnly="False">
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding BooleanValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsThreeState="False" IsEnabled="{Binding IsReadWrite}" />
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <windows:PropertyGridDataTemplate PropertyType="System.DateTime|System.Nullable`1[System.DateTime]" IsReadOnly="False">
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <windows:PropertyGridDataTemplate PropertyType="System.Guid|System.Nullable`1[System.Guid]" IsReadOnly="False">
                            <DataTemplate>
                                <TextBox Style="{StaticResource ValidationTextBox}" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,StringFormat=N}" MaxLength="32" CharacterCasing="Upper" VerticalContentAlignment="Center" FontFamily="Lucida Console">
                                    <TextBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="Cut" />
                                            <MenuItem Command="Copy" />
                                            <MenuItem Command="Paste" />
                                            <Separator />
                                            <MenuItem Header="Empty" Command="{x:Static windows:PropertyGrid.EmptyGuidCommand}" />
                                            <MenuItem Header="Increment Guid" Command="{x:Static windows:PropertyGrid.IncrementGuidCommand}" />
                                            <MenuItem Header="New Guid" Command="{x:Static windows:PropertyGrid.NewGuidCommand}" />
                                            <!--<MenuItem Header="New Guid 00000000-0000-0000-0000-000000000000" CommandParameter="D" Command="{x:Static ssb:PropertyGrid.NewGuidCommand}" />
                                            <MenuItem Header="New Guid {00000000-0000-0000-0000-000000000000}" CommandParameter="B" Command="{x:Static ssb:PropertyGrid.NewGuidCommand}" />
                                            <MenuItem Header="New Guid (00000000-0000-0000-0000-000000000000)" CommandParameter="P" Command="{x:Static ssb:PropertyGrid.NewGuidCommand}" />
                                            <MenuItem Header="New Guid {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}" CommandParameter="X" Command="{x:Static ssb:PropertyGrid.NewGuidCommand}" />-->
                                        </ContextMenu>
                                    </TextBox.ContextMenu>
                                </TextBox>
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <windows:PropertyGridDataTemplate IsReadOnly="True">
                            <DataTemplate>
                                <TextBox Text="{Binding TextValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ReadOnlyBackground}" />
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                        <windows:PropertyGridDataTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding TextValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource ValidationTextBox2}" />
                            </DataTemplate>
                        </windows:PropertyGridDataTemplate>
                    </windows:PropertyGridDataTemplateSelector>
                </DataGridTemplateColumn.CellTemplateSelector>
            </DataGridTemplateColumn>
        </DataGrid.Columns>
        <DataGrid.GroupStyle>
            <GroupStyle>
                <GroupStyle.ContainerStyle>
                    <Style TargetType="{x:Type GroupItem}">
                        <Setter Property="Margin" Value="0,0,0,5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                    <Expander IsExpanded="True" Padding="2" >
                                        <Expander.Header>
                                            <DockPanel>
                                                <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" />
                                            </DockPanel>
                                        </Expander.Header>
                                        <Expander.Content>
                                            <ItemsPresenter />
                                        </Expander.Content>
                                    </Expander>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </GroupStyle.ContainerStyle>
            </GroupStyle>
            <GroupStyle>
                <GroupStyle.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel Background="LightBlue">
                            <TextBlock Text="{Binding Path=Name}" Margin="30,0,0,0" />
                        </DockPanel>
                    </DataTemplate>
                </GroupStyle.HeaderTemplate>
            </GroupStyle>
        </DataGrid.GroupStyle>
    </DataGrid>
    </ScrollViewer>
</UserControl>
